import{s as P,n as y}from"./scheduler.B-8LQpXJ.js";import{S as L,i as S,e as u,s as k,H as E,a as r,g as d,c as m,f as J,j as R,d as s,k as q,b as a}from"./index.CtSOuxl2.js";function A(T){let e,v='Jekyll supports the use of <a href="http://daringfireball.net/projects/markdown/syntax" rel="nofollow">Markdown</a> with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows.',h,o,g="Tables have also been extended from Markdown:",f,l,b="<thead><tr><th>First Header</th> <th>Second Header</th></tr></thead> <tbody><tr><td>Content Cell</td> <td>Content Cell</td></tr> <tr><td>Content Cell</td> <td>Content Cell</td></tr></tbody>",w,p,H="Hereâ€™s an example of an image, which is included using Markdown:",C,c,j="Highlighting for code in Jekyll is done using Pygments or Rouge. This theme makes use of Rouge by default.",_,i,x,M=`<code class="language-js"><span class="token comment">// count to ten</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">// count to twenty</span>
<span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	j<span class="token operator">++</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`;return{c(){e=u("p"),e.innerHTML=v,h=k(),o=u("p"),o.textContent=g,f=k(),l=u("table"),l.innerHTML=b,w=k(),p=u("p"),p.textContent=H,C=k(),c=u("p"),c.textContent=j,_=k(),i=u("pre"),x=new E(!1),this.h()},l(t){e=r(t,"P",{"data-svelte-h":!0}),d(e)!=="svelte-11f9kjs"&&(e.innerHTML=v),h=m(t),o=r(t,"P",{"data-svelte-h":!0}),d(o)!=="svelte-1w7hymo"&&(o.textContent=g),f=m(t),l=r(t,"TABLE",{"data-svelte-h":!0}),d(l)!=="svelte-10jtpsh"&&(l.innerHTML=b),w=m(t),p=r(t,"P",{"data-svelte-h":!0}),d(p)!=="svelte-hx8uza"&&(p.textContent=H),C=m(t),c=r(t,"P",{"data-svelte-h":!0}),d(c)!=="svelte-1ber0lc"&&(c.textContent=j),_=m(t),i=r(t,"PRE",{class:!0});var n=J(i);x=R(n,!1),n.forEach(s),this.h()},h(){x.a=null,q(i,"class","language-js")},m(t,n){a(t,e,n),a(t,h,n),a(t,o,n),a(t,f,n),a(t,l,n),a(t,w,n),a(t,p,n),a(t,C,n),a(t,c,n),a(t,_,n),a(t,i,n),x.m(M,i)},p:y,i:y,o:y,d(t){t&&(s(e),s(h),s(o),s(f),s(l),s(w),s(p),s(C),s(c),s(_),s(i))}}}const F={title:"Canards in the Van der Pol System",date:"2018-12-28"};class V extends L{constructor(e){super(),S(this,e,null,A,P,{})}}export{V as default,F as metadata};
